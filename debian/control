Source: packer
Section: utils
Priority: optional
Maintainer: Thomas Dreibholz <dreibh@iem.uni-due.de>
Uploaders: Shengjing Zhu <zhsj@debian.org>
Build-Depends: debhelper (>= 11),
               dh-golang,
               golang-any (>= 1.5),
               golang-github-aliyun-aliyun-oss-go-sdk-dev,
               golang-github-approvals-go-approval-tests-dev,
               golang-github-aws-aws-sdk-go-dev (>= 1.4.22),
               golang-github-biogo-hts-dev,
               golang-github-christrenkamp-goxpath-dev (>= 1.0~alpha3+git20170922.c385f95~),
               golang-github-denverdino-aliyungo-dev (>= 0.0~git20180921.13fa8aa~),
               golang-github-digitalocean-godo-dev (>= 1.1.0),
               golang-github-dylanmei-winrmtest-dev,
               golang-github-google-go-cmp-dev,
               golang-github-google-shlex-dev,
               golang-github-google-uuid-dev,
               golang-github-gophercloud-gophercloud-dev (>=0.0~git20180917.45f1c769~),
               golang-github-hashicorp-go-checkpoint-dev,
               golang-github-hashicorp-go-cleanhttp-dev,
               golang-github-hashicorp-go-multierror-dev,
               golang-github-hashicorp-go-uuid-dev,
               golang-github-hashicorp-go-version-dev,
               golang-github-hashicorp-yamux-dev,
               golang-github-kardianos-osext-dev,
               golang-github-klauspost-pgzip-dev,
               golang-github-masterzen-winrm-dev (>= 0.0~git20170601.0.1ca0ba6~),
               golang-github-mitchellh-cli-dev,
               golang-github-mitchellh-go-fs-dev,
               golang-github-mitchellh-go-homedir-dev,
               golang-github-mitchellh-go-vnc-dev,
               golang-github-mitchellh-iochan-dev,
               golang-github-mitchellh-multistep-dev,
               golang-github-mitchellh-panicwrap-dev,
               golang-github-mitchellh-prefixedio-dev,
               golang-github-mitchellh-reflectwalk-dev,
               golang-github-packer-community-winrmcp-dev (>= 0.0~git20170607.0.078cc0a~),
               golang-github-pierrec-lz4-dev,
               golang-github-pkg-sftp-dev,
               golang-github-stretchr-testify-dev,
               golang-github-ugorji-go-codec-dev,
               golang-github-vmware-govmomi-dev,
               golang-github-xanzy-go-cloudstack-dev,
               golang-golang-x-crypto-dev (>= 1:0.0~git20170407.0.55a552f+REALLY.0.0~git20161012.0.5f31782),
               golang-golang-x-oauth2-dev (>= 0.0~git20180821.d2e6202~),
               golang-golang-x-oauth2-google-dev (>= 0.0~git20180821.d2e6202~),
               golang-google-api-dev (>= 0.0~git20180916.19ff876~),
               golang-gopkg-cheggaaa-pb.v1-dev (>= 1.0.25~)
Standards-Version: 4.5.0
Homepage: https://www.packer.io/
Vcs-Browser: https://salsa.debian.org/go-team/packages/packer
Vcs-Git: https://salsa.debian.org/go-team/packages/packer.git
XS-Go-Import-Path: github.com/hashicorp/packer
Rules-Requires-Root: no
Testsuite: autopkgtest-pkg-go

Package: packer
Architecture: any
Built-Using: ${misc:Built-Using}
Depends: ${misc:Depends},
         ${shlibs:Depends}
Recommends: docker.io
Suggests: ansible,
          chef,
          qemu-system
Description: tool for creating machine images for multiple platforms
 Packer is an open source tool for creating identical machine images for
 multiple platforms from a single source configuration. Packer is lightweight,
 runs on every major operating system, and is highly performant, creating
 machine images for multiple platforms in parallel. Packer does not replace
 configuration management like Chef or Puppet. In fact, when building images,
 Packer is able to use tools like Chef or Puppet to install software onto the
 image.
 .
 A machine image is a single static unit that contains a pre-configured
 operating system and installed software which is used to quickly create new
 running machines. Machine image formats change for each platform. Some
 examples include AMIs for EC2, VMDK/VMX files for VMware, OVF exports for
 VirtualBox, etc.
 .
 For the documentation of Packer, please see <https://www.packer.io/docs>.
