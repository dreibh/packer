.TH "PACKER" 1 "" "" "packer"
.SH NAME
\fBpacker\fP \- tool for creating machine images for multiple platforms
.SH SYNOPSIS
$ \fBpacker\fP <command> [<options>] <args>

$ \fBpacker\fP build -only=amazon-ebs \fItemplate\fP.json
.SH DESCRIPTION
Packer is a CLI tool for the automatic creation of identical machine images (single deployable
units that contain a pre-configured OS and installed software) for multiple platforms (public
cloud providers, private cloud and desktop virtualization solutions) from a single JSON
template configuration file. For the documentation of Packer, especially on how to write
proper Packer templates, please see <https://www.packer.io/docs>.
.SH COMMANDS
.IP build
build image(s) from a template. For a full list of options related to this command, see the output of: $ \fBpacker\fP build -h.
.IP fix
fix templates from old versions of Packer like this: $ \fBpacker\fP fix \fIold\fP.json > \fInew\fP.json. For a full list of fixes which this command performs and special options, see the output of: $ \fBpacker\fP fix -h.
.IP inspect
print components of a template. This command validates the basic syntax of the template by necessity, but not if the configuration is valid (this is what the command \fBvalidate\fP is for).
.IP validate
check if a template is valid. The command returns a zero exit status if a template is valid, and a non-zero exit status if it isn't. If \fB-syntax-only\fP is given as option, only the syntax of the template is checked.
.IP version
print the Packer version
.SH LOGGING
To get a build log, run \fBpacker\fP like this: $ PACKER_LOG=1 packer build \fIfoo\fP.json 2>>\fIbuild.log\fP, or use $PACKER_LOG_PATH.
.SH ENVIRONMENT VARIABLES
For a full list of available environment variables, see
<https://www.packer.io/docs/other/environmental-variables.html>.
.SH AUTHORS
HashiCorp's Packer is developed by Mitchell Hashimoto <mitchell.hashimoto@gmail.com>,
Jack Pearkes <jackpearkes@gmail.com>,
Mark Peek,
Ross Smith II <ross@smithii.com>,
and Rickard von Essen <rickard.von.essen@gmail.com>.
.PP
This manpage is written by Daniel Stender <stender@debian.org> for the Debian Go packaging team.
